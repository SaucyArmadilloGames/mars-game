<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sShooter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = ID.depth - 1
y = ID.y //- 40
global.Target = false
Shoot = false
Wait = 0
Bait = 0
Lazers = 0
Health = 5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if instance_exists(oPlayer) {
//image_angle = point_direction(x,y,oPlayer.x,oPlayer.y)
//arc_of_sight(x,y,dir,range,angle,objToLookFor,objToIgnore)
//image_angle = point_direction(x,y,oPlayer.x,oPlayer.y)
}else {
//image_angle = image_angle + 1
}

if Shoot = true {
    Wait = Wait + 1
    if Wait &gt; room_speed {   
        Bait = Bait + 1    
        if Bait &gt; room_speed * .5 {
        Lazer = instance_create(x,y,oSpore)
        Lazer.direction = image_angle
        Lazer.speed = 20 * 30 / room_speed
        Lazer.image_angle = image_angle
        Bait = 0
        Lazers = Lazers + 1
        }
    if Lazers &gt; 30 { Wait = 0 Lazers = 0 }        
    }
} else {Wait = 0  }
if collision_line(x,y,oPlayer.x,oPlayer.y,oSolid,false,true){
Shoot = false
} else {
image_angle = image_angle + 2
Player = point_direction(x,y,oPlayer.x,oPlayer.y)
image_angle = angle_approach(image_angle,Player,3)
if collision_line(x,y,oPlayer.x,oPlayer.y,oPlayer,false,true){Shoot = true} else {Shoot = false}
}
if instance_place(x,y,oExplosionRadius) {
instance_destroy()
}

//damage

    //what hurts me
    if place_meeting(x,y,oProjectile) {Health -= 1}
    if (place_meeting(x,y,oGrinder) &amp;&amp; oGrinder.Grinding) {Health -= 1}
    
    //how do i die
    if Health &lt; 0 { repeat (3) {instance_create(x,y,oBugGib)}
    ScPlaySplat()
    if floor(random(3)) = 0 {instance_create( x,y,oFly )}
    repeat (2) {instance_create( x+random_range(-10,10),y+random_range(-10,10),oSplatMark )}
    instance_destroy()
    }
    
    





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()


//with Line { if instance_place(x,y,oSolid) global.Target = true }
if Shoot = true {
//draw_line(x,y,oPlayer.x,oPlayer.y)
//draw_set_colour(c_red)} else {draw_set_colour(c_black)
}

//draw_text(x, y, string(Shoot) ) 


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
