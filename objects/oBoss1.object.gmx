<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBoss</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Health = 1500
Max = Health
State = 0
Dir = ceil(random(2))
Timer1 = 0
Timer2 = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = 1
image_yscale = image_xscale
IncBullet = instance_place(x,y,oProjectile)
if instance_exists(IncBullet) {

if random(2) &gt; 1 {
    instance_create( x,y,oBugGib )
    instance_create( x,y,oSplatMark )
    }
with IncBullet {  
with other { Health -= other.Damage }
instance_destroy() }
}

//bouncing

if place_meeting(x+hspeed, y+vspeed, oSolid) {
    
    move_bounce_all(true)
    speed = speed * .66
    if Dir = 1 {Dir = 2} else {Dir = 1}
    
}

//horisontal movement

if Dir = 1 {
if hspeed &lt; 2 { hspeed += .1 }
}

if Dir = 2 {
if hspeed &gt; -2 { hspeed -= .1 }
}

//gravity
if vspeed &lt; 4 {
vspeed += .1
}

//flying
if place_meeting(x,y + 105,oSolid) { 
if vspeed &gt; -1 {
vspeed -= 1.5 }}

//damage
if State = 0 {
if Health &lt; Max * .66{
sprite_index = sBoss2
State = 1
}}
if State = 1 {
if Health &lt; Max * .33{
sprite_index = sBoss3
State = 1
}}

if ScCanSee(oPlayer,1) = true {

//Shooting
Timer2 += 1
if Timer2 &gt; room_speed * 7 { image_xscale = random_range(.9,1.1) image_yscale = image_xscale }
if Timer2 &gt; room_speed * 8 {
repeat (48) { 
Proj = instance_create(x,y,oSpore) 
Proj.direction = (random(360))
Proj.speed = random_range(1,14)
with (Proj) { Grav = true }
}
instance_create(x,y,oBug3)
Timer2 = 0
}
//spawning enemys
//Timer1 += 1
Timer1 = Timer2
if Timer1 &gt; room_speed * 20 {
repeat (1) { instance_create(x,y,oBug3) }
repeat (3) { instance_create(x,y,oBug2) }
Timer1 = 0
}

}

if Health &lt; 0 { 
//do epic death stuff
instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
draw_text(x,y,string(Health))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
