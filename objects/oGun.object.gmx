<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sGun1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 8
Timerr = 0
ShootingFlames = false
Heat = 0
HeatSec = 0
OverheatTemp = 6

vsp = 0;
hsp = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(oPlayer) = false {
instance_destroy() } else { 

if instance_number(oGun) &gt; 1 {
instance_destroy() }


Playerx = oPlayer.x
Playery = oPlayer.y


image_angle = point_direction(x,y,mouse_x,mouse_y) + random(1)

x = Playerx
y = Playery

}

if image_angle &gt; 90 and image_angle &lt; 270 {
image_yscale = -1 } else { 
image_yscale = 1 }


if global.GunType = 1 {
    sprite_index = sGun1
    
        // Throwing Knifes
        
            if mouse_check_button(mb_left) {
            ShootingKnifes = true
            Knife = instance_create(x,y,oKnife)
                Knife.direction = point_direction(x,y,mouse_x,mouse_y) + random_range(-3, 3)
                Knife.speed = 24 * 30 /room_speed
                audio_play_sound(aKnife,2,false)
                image_angle = Knife.direction
        } else { ShootingKnifes = false }
    
    // Throwing Pills
    
            if mouse_check_button(mb_right) {
            ShootingPills = true
            Pill = instance_create(x,y,oPill)
                Pill.direction = point_direction(x,y,mouse_x,mouse_y) + random_range(-.75, .75)
                Pill.speed = 32 * 30 /room_speed
                audio_play_sound(aPIll,2,false)
                image_angle = Pill.direction
        } else { ShootingPills = false }
        
        if ShootingKnifes = true and ShootingPills = true {
        image_angle = image_angle + random_range(-3, 3) }
        }

       
        
//if we have a flame gun
if global.GunType = 2 {
    //make me look like one
    sprite_index = sFlameGun1
    
    //flame shooting code
        if mouse_check_button(mb_right) or mouse_check_button(mb_left){
    ShootingFlames = true
                Flame = instance_create(x,y,oFlame)
                    Flame.direction = point_direction(x,y,mouse_x,mouse_y) + random_range(-7.5, 7.5)
                    Flame.speed = oPlayer.speed + ((25 + random_range(-5, 5)) * 30 /room_speed)
                    audio_play_sound(aFire,2,false)
                    image_angle = Flame.direction
            } else { ShootingFlames = false }
}

//Heating up code

if ShootingFlames = true {
     Heat = Heat + random_range(.9, 1.1)
}

//Cooling down code

 if ShootingFlames = false and Heat &gt; 0{
     Heat = Heat - random_range(2, 3)
}
 if Heat &lt; 0 { Heat = 0 }

//Overheat

HeatSec = Heat / room_speed
    if HeatSec &gt; OverheatTemp {
        ShootingFlames = false
        Heat = 0
        global.GunRegular = true
        global.GunFlame = false
        audio_play_sound(aExplode, 2, false)
        instance_create(x, y, oExplosion)
        instance_create(x, y, oGunBox)
        instance_destroy()
        }
        
    //Throwing Grenades
   if global.GunType = 3 {
    sprite_index = sBombHand
        
   
    
           if mouse_check_button_pressed(mb_any) {
            ShootingGrenades = true
            Grenade = instance_create(x,y,oGrenade)
                Grenade.direction = point_direction(x,y,mouse_x,mouse_y) + random_range(-.75, .75)
                Grenade.speed = 15 * 30 /room_speed
                audio_play_sound(aPIll,2,false)
                image_angle = Grenade.direction
        } else { ShootingPills = false }
        }     
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw overheat bar

X1 = x + 20 
Y1 = y + 21
X2 = x - 20
Y2 = y + 30
OverheatPercent = (HeatSec / OverheatTemp) * 100

Shake = random_range(-2, 2)

if ShootingFlames = true {
Y1 = Y1 + Shake
Y2 = Y2 + Shake
X1 = X1 + Shake
X2 = X2 + Shake
}

if global.GunType = 2 or global.GunType = 3 {
//draw_text(x, y, "Heat: "+string(OverheatPercent))
draw_healthbar(X1, Y1, X2, Y2, OverheatPercent, c_black, c_lime, c_red, 0, false, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
