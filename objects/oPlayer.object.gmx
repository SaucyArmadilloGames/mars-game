<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayerIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 10

global.Armed = false
global.PlayerPickedUpGun = false
global.GunNeedsToDie = false
Hits = 0
Health = 10
PlayerSpeed = 5 * 30 /room_speed
Moving = false
image_speed = .25
Airborn = false
key_right = false
Dire = 1
Hooked = false

//What weapon do i have?

if instance_exists(oGun) = false and global.PlayerHasGun = true {
instance_create(x, y, oGun)
}


if global.GunType &gt; 0.1 {
global.PlayerHasGun = true }

instance_create(x,y,oHand)


///Initialize Variables
grav = 0.2;
hsp = 0;
vsp = 0;
jumpspeed = 7;
movespeed = 4;

switch1 = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Pointy = point_direction(x,y,mouse_x, mouse_y) 


if Pointy &gt; 90 and Pointy &lt; 270 {
image_xscale = -1 } else { 
image_xscale = 1 }





//if Dire = 1 {image_xscale = 1} 
//if Dire = 2 {image_xscale = -1} 
    
ScForceStayInGame()

ScAllDudes()


//GiveMeAGun

if global.PlayerPickedUpGun = true { 

    if instance_exists(oGun) {} else {
    instance_create(x, y, oGun)}

global.PlayerPickedUpGun = false
}
 
if keyboard_check(ord('D')) or keyboard_check(ord('A')) {
Walking = true } else { Walking = false }


/*
if instance_exists(oGun) {

sprite_index = PlayerGun

} else { sprite_index = PlayerFree }
*/

if vsp = 0 { Airborn = false } else { Airborn = true }

if Airborn = true {
image_index = sPlayerAirborn
//if Dire = 1 {image_xscale = 1} 
//if Dire = 2 {image_xscale = -1} 

} else {

if Walking = true { sprite_index = sPlayerWalking } else { sprite_index = sPlayerIdle 
}
//if Walking = true and key_right = true { image_xscale = 1 Dire = 1 } else { image_xscale = -1 Dire = 2 }
}






//if Walking = true { sprite_index = sPlayer } else { sprite_index = sPlayerStill } 

/*
if Walking = true { sprite_index = sPlayerWalking 
} else { 
sprite_index = sPlayerIdle  //sprite_index = sPlayer3 
} 
*/

if global.Hooked = true and instance_exists(oGrapple) {} else {
    //Get the player's input
    key_right = keyboard_check(ord('D'));
    key_left = -keyboard_check(ord('A'));
    key_jump = keyboard_check_pressed(ord('W'));
    
    //React to inputs
    move = key_left + key_right;
    hsp = move * movespeed;
    if (vsp &lt; 10) vsp += grav;
    
    if (place_meeting(x,y+1,oSolid))
    {
        vsp = key_jump * -jumpspeed
    }
}

//Horizontal Collision
if (place_meeting(x+hsp,y,oSolid))
{
    while(!place_meeting(x+sign(hsp),y,oSolid))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
x += hsp;

//Vertical Collision
if (place_meeting(x,y+vsp,oSolid))
{
    while(!place_meeting(x,y+sign(vsp),oSolid))
    {
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;

///Button Presser


//red

if place_meeting(x,y,oRedSwitch) and keyboard_check_pressed(ord('E')) and global.RedOpenC = false {
    global.RedOpen = !global.RedOpen;
    with (oGrateRed) { Open = !Open }
    with (oGrateRed2) { Open = !Open }
    }
//green
if place_meeting(x,y,oGreenSwitch) and keyboard_check_pressed(ord('E')) and global.GreenOpenC = false {
    global.GreenOpen = !global.GreenOpen;
    with (oGrateGreen) { Open = !Open }
    with (oGrateGreen2) { Open = !Open }
    }
//blue
if place_meeting(x,y,oBlueSwitch) and keyboard_check_pressed(ord('E')) and global.BlueOpenC = false {
    global.BlueOpen = !global.BlueOpen;
    with (oGrateBlue) { Open = !Open }
    with (oGrateBlue2) { Open = !Open }
    }
//blue
if place_meeting(x,y,oOrangeSwitch) and keyboard_check_pressed(ord('E')) and global.OrangeOpenC = false {
    global.OrangeOpen = !global.OrangeOpen;
    with (oGrateOrange) { Open = !Open }
    with (oGrateOrange2) { Open = !Open }
    }

if mouse_check_button_pressed(mb_right) { 

//if instance_exists(oGrapple) { with (oGrapple) {instance_destroy()} }
//instance_create(x,y,oGrapple)

}

//Grapple Crap

if instance_exists(oGrapple) {  
if global.Hooked = true { grav = 0 } else { 
//gravity
grav = 0.2

   }


} else {
//gravity
grav = 0.2
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
